// Generated by view binder compiler. Do not edit!
package com.example.projectmulumbatwo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.projectmulumbatwo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button mBtnSignIns;

  @NonNull
  public final EditText mEdtEmails;

  @NonNull
  public final EditText mEdtPasswaads;

  @NonNull
  public final TextView mTvSignIn;

  @NonNull
  public final TextView mTvwelcome;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button mBtnSignIns,
      @NonNull EditText mEdtEmails, @NonNull EditText mEdtPasswaads, @NonNull TextView mTvSignIn,
      @NonNull TextView mTvwelcome) {
    this.rootView = rootView;
    this.mBtnSignIns = mBtnSignIns;
    this.mEdtEmails = mEdtEmails;
    this.mEdtPasswaads = mEdtPasswaads;
    this.mTvSignIn = mTvSignIn;
    this.mTvwelcome = mTvwelcome;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mBtnSignIns;
      Button mBtnSignIns = ViewBindings.findChildViewById(rootView, id);
      if (mBtnSignIns == null) {
        break missingId;
      }

      id = R.id.mEdtEmails;
      EditText mEdtEmails = ViewBindings.findChildViewById(rootView, id);
      if (mEdtEmails == null) {
        break missingId;
      }

      id = R.id.mEdtPasswaads;
      EditText mEdtPasswaads = ViewBindings.findChildViewById(rootView, id);
      if (mEdtPasswaads == null) {
        break missingId;
      }

      id = R.id.mTvSignIn;
      TextView mTvSignIn = ViewBindings.findChildViewById(rootView, id);
      if (mTvSignIn == null) {
        break missingId;
      }

      id = R.id.mTvwelcome;
      TextView mTvwelcome = ViewBindings.findChildViewById(rootView, id);
      if (mTvwelcome == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, mBtnSignIns, mEdtEmails,
          mEdtPasswaads, mTvSignIn, mTvwelcome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
